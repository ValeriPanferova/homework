product_prices = [54, 74.4, 102.35, 65, 98, 7.24, 45, 854.0, 35, 77, 62.5, 21.66, 520, 210.7, 957]
# print(id(product_prices))  # id = 2479170588608

# A. Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (
# например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например,
# получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
modified_product_prices = []  # пустой список в котором будут храниться новые данные
for el in product_prices:
    el_split = str(el).split('.')  # разделяем элементы на подстроку знаком '.'
    if len(el_split) == 1:
        modified_product_prices.append(el_split[0] + ' руб')  # если длина списка равна 1, то в список
        # записываем первый элемент и значение 'руб'
    elif len(el_split) == 2:  # если длина списка равна 2
        if len(el_split[1]) == 1:  # если длина второго элемента списка  равна 1
            el_split[1] = str(0) + el_split[1]  # то перед вторым элементом списка добавляем 0
        modified_product_prices.append(el_split[0] + ' руб ' + el_split[1] + ' коп') # полученное значение добавляем
        # в список

print(modified_product_prices)

# B. Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после
# сортировки остался тот же)
print(sorted(product_prices, reverse=False))
print(id(product_prices))  # id 2479170588608 остался неизменным после сортировки

# C. Создать новый список, содержащий те же цены, но отсортированные по убыванию.
copy_product_prices = product_prices.copy()
copy_product_prices = sorted(copy_product_prices, reverse=True)
print(copy_product_prices)
print(id(copy_product_prices))

# D. Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?
print(copy_product_prices[0:5])
